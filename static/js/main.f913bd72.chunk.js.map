{"version":3,"sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/App/App.styled.js","components/App/App.jsx","index.js"],"names":["SectionWrap","SectionTitle","Section","title","children","Form","Input","DebounceInput","Label","Button","INITIAL_STATE","name","number","ContactsForm","state","handleChange","event","target","value","console","log","setState","handleSubmit","preventDefault","props","onSubmit","id","nanoid","formReset","nameInputId","phoneInputId","this","htmlFor","type","debounceTimeout","pattern","placeholder","onChange","required","Component","ContactsItem","ContactsDetails","ContactsList","contacts","onDeleteClick","map","size","onClick","Filter","filter","Container","App","addContact","newContact","some","alert","deleteContact","contactId","contact","getFilterValue","filteredContacts","normalizeFilter","toLowerCase","includes","filtered","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAEO,IAAMA,EAAW,yFAIXC,EAAY,8G,OCWVC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,eAACJ,EAAD,WACE,cAACC,EAAD,UAAeE,IACdC,M,6BCJA,IAAMC,EAAI,uGAKJC,EAAQ,YAAOC,gBAAP,sBAAH,IAELC,EAAK,sFAILC,EAAM,8WCLbC,EAAgB,CACpBC,KAAM,GACNC,OAAQ,IAkEKC,E,4MA9DbC,M,eACKJ,G,EAGLK,aAAe,SAAAC,GACb,MAAwBA,EAAMC,OAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACdC,QAAQC,IAAIT,EAAMO,GAClB,EAAKG,SAAL,eAAiBV,EAAOO,K,EAG1BI,aAAe,SAAAN,GACbA,EAAMO,iBACN,MAAyB,EAAKT,MAAtBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,EAAKY,MAAMC,SAAS,CAAEC,GAAIC,YAAO,GAAIhB,OAAMC,WAC3C,EAAKgB,a,EAGPA,UAAY,WACV,EAAKP,SAAL,eAAmBX,K,4CAGrB,WACE,IAAImB,EAAcF,YAAO,GACrBG,EAAeH,YAAO,GAClBL,EAA+BS,KAA/BT,aAAcP,EAAiBgB,KAAjBhB,aACtB,EAAyBgB,KAAKjB,MAAtBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACE,eAACP,EAAD,CAAMoB,SAAUH,EAAhB,UACE,cAACd,EAAD,CAAOwB,QAAO,aAAQH,GAAtB,kBACA,cAACvB,EAAD,CACEoB,GAAE,aAAQG,GACVI,KAAK,OACLtB,KAAK,OACLuB,gBAAiB,IACjBC,QAAQ,yHACRC,YAAY,OACZjC,MAAM,kcACNkC,SAAUtB,EACVG,MAAOP,EACP2B,UAAQ,IAGV,cAAC9B,EAAD,CAAOwB,QAAO,aAAQF,GAAtB,oBACA,cAACxB,EAAD,CACEoB,GAAE,aAAQI,GACVG,KAAK,MACLtB,KAAK,SACLuB,gBAAiB,IACjBC,QAAQ,yFACRC,YAAY,sBACZjC,MAAM,giBACNe,MAAON,EACPyB,SAAUtB,EACVuB,UAAQ,IAEV,cAAC7B,EAAD,CAAQwB,KAAK,SAAb,gC,GAzDmBM,a,QCZpB,IAAMC,EAAY,ySAgBZC,EAAe,gIAUfhC,EAAM,4WCWJiC,MA/Bf,YAAoD,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,cAChC,OACE,6BACGD,EAASE,KAAI,YAA2B,IAAxBnB,EAAuB,EAAvBA,GAAIf,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACzB,OACE,eAAC4B,EAAD,WACE,gCACE,eAACC,EAAD,WACE,cAAC,IAAD,CAAQK,KAAM,KACd,+BAAOnC,OAET,eAAC8B,EAAD,WACE,cAAC,IAAD,CAAYK,KAAM,KAClB,+BAAOlC,UAGX,cAAC,EAAD,CAAQqB,KAAK,SAASc,QAAS,kBAAMH,EAAclB,IAAnD,sBAXiBA,SCUdsB,MAnBf,YAAuC,IAArBC,EAAoB,EAApBA,OAAQZ,EAAY,EAAZA,SACxB,OACE,cAAC,gBAAD,CACEX,GAAE,aAAQC,YAAO,IACjBM,KAAK,OACLtB,KAAK,OACLO,MAAO+B,EACPf,gBAAiB,IACjBG,SAAUA,EACVD,YAAY,YCXX,IAAMc,EAAS,iOCKDC,E,4MACnBrC,MAAQ,CACN6B,SAAU,CACR,CAAEjB,GAAI,OAAQf,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEc,GAAI,OAAQf,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEc,GAAI,OAAQf,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEc,GAAI,OAAQf,KAAM,iBAAkBC,OAAQ,cAEhDqC,OAAQ,I,EAGVG,WAAa,SAAAC,GACX,EAAKvC,MAAM6B,SAASW,MAAK,qBAAG3C,OAAoB0C,EAAW1C,QACvD4C,MAAM,WAAD,OAAYF,EAAW1C,KAAvB,oBACL,EAAKU,UAAS,gBAAGsB,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEU,GAAH,mBAAkBV,S,EAIlCa,cAAgB,SAAAC,GACd,EAAKpC,UAAS,kBAAmB,CAC/BsB,SADY,EAAGA,SACIM,QAAO,SAAAS,GAAO,OAAIA,EAAQhC,KAAO+B,U,EAIxDE,eAAiB,SAAA3C,GACf,EAAKK,SAAS,CACZ4B,OAAQjC,EAAMC,OAAOC,S,EAIzB0C,iBAAmB,WACjB,MAA6B,EAAK9C,MAA1B6B,EAAR,EAAQA,SACFkB,EADN,EAAkBZ,OACaa,cAE/B,OAAOnB,EAASM,QACd,SAAAS,GAAO,OACLA,EAAQ/C,KAAKmD,cAAcC,SAASF,IACpCH,EAAQ9C,OAAOmD,SAASF,O,4CAI9B,WACE,IAAQT,EACNrB,KADMqB,WAAYI,EAClBzB,KADkByB,cAAeG,EACjC5B,KADiC4B,eAE7BK,GAAWJ,EADf7B,KADiD6B,oBAGnD,OACE,eAACV,EAAD,WACE,cAAC,EAAD,CAAS/C,MAAM,YAAf,SACE,cAAC,EAAD,CAAcsB,SAAU2B,MAE1B,eAAC,EAAD,CAASjD,MAAM,WAAf,UACE,cAAC,EAAD,CAAQ8C,OAAQlB,KAAKjB,MAAMmC,OAAQZ,SAAUsB,IAE7C,cAAC,EAAD,CAAchB,SAAUqB,EAAUpB,cAAeY,c,GAtD1BjB,aCDjC0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f913bd72.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\r\n\r\nexport const SectionWrap = styled.section`\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n  text-transform: uppercase;\r\n  margin-bottom: 15px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { SectionWrap, SectionTitle } from 'components/Section/Section.styled';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <SectionWrap>\r\n      <SectionTitle>{title}</SectionTitle>\r\n      {children}\r\n    </SectionWrap>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import { DebounceInput } from 'react-debounce-input';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Input = styled(DebounceInput)``;\r\n\r\nexport const Label = styled.label`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  min-width: 150px;\r\n  padding: 12px 12px;\r\n  font-size: 12px;\r\n  font-weight: 700;\r\n  color: var(--text-color);\r\n  background-color: lightslategray;\r\n  text-transform: uppercase;\r\n  border-radius: 5px;\r\n  border: 1px solid transparent;\r\n  cursor: pointer;\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: 4px 3px 12px -1px var(--accent-color);\r\n  }\r\n`;\r\n","import { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Label,\r\n  Input,\r\n} from 'components/ContactsForm/ContactsForm.styled';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactsForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    console.log(name, value);\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onSubmit({ id: nanoid(3), name, number });\r\n    this.formReset();\r\n  };\r\n\r\n  formReset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    let nameInputId = nanoid(3);\r\n    let phoneInputId = nanoid(3);\r\n    const { handleSubmit, handleChange } = this;\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={handleSubmit}>\r\n        <Label htmlFor={`id-${nameInputId}`}>Name</Label>\r\n        <Input\r\n          id={`id-${nameInputId}`}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          debounceTimeout={700}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          placeholder=\"Name\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={handleChange}\r\n          value={name}\r\n          required\r\n        />\r\n\r\n        <Label htmlFor={`id-${phoneInputId}`}>Number</Label>\r\n        <Input\r\n          id={`id-${phoneInputId}`}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          debounceTimeout={700}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          placeholder=\"+38 (000) 000-00-00\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsForm;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const ContactsItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  padding: 10px 12px;\r\n  border: 1px solid var(--main-color);\r\n  border-radius: 5px;\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  &:hover {\r\n    background-color: var(--bg-hover-color);\r\n  }\r\n`;\r\n\r\nexport const ContactsDetails = styled.p`\r\n  & > span {\r\n    margin-left: 10px;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  min-width: 150px;\r\n  padding: 8px 12px;\r\n  font-size: 12px;\r\n  font-weight: 700;\r\n  color: var(--text-color);\r\n  text-transform: uppercase;\r\n  background-color: lightslategray;\r\n  border-radius: 5px;\r\n  border: 1px solid transparent;\r\n  cursor: pointer;\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: 4px 3px 12px -1px var(--accent-color);\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { FaUser, FaPhoneAlt } from 'react-icons/fa';\r\nimport {\r\n  ContactsItem,\r\n  ContactsDetails,\r\n  Button,\r\n} from 'components/ContactsList/ContactsList.styled';\r\n\r\nfunction ContactsList({ contacts, onDeleteClick }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <ContactsItem key={id}>\r\n            <div>\r\n              <ContactsDetails>\r\n                <FaUser size={14} />\r\n                <span>{name}</span>\r\n              </ContactsDetails>\r\n              <ContactsDetails>\r\n                <FaPhoneAlt size={14} />\r\n                <span>{number}</span>\r\n              </ContactsDetails>\r\n            </div>\r\n            <Button type=\"button\" onClick={() => onDeleteClick(id)}>\r\n              Delete\r\n            </Button>\r\n          </ContactsItem>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\r\n  onDeleteClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nfunction Filter({ filter, onChange }) {\r\n  return (\r\n    <DebounceInput\r\n      id={`id-${nanoid(3)}`}\r\n      type=\"text\"\r\n      name=\"name\"\r\n      value={filter}\r\n      debounceTimeout={700}\r\n      onChange={onChange}\r\n      placeholder=\"Search\"\r\n    />\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 650px;\r\n  padding: 30px 30px 0 30px;\r\n  background-color: var(--text-color);\r\n  border: 1px solid var(--text-color);\r\n  border-radius: 5px;\r\n`;\r\n","import { Component } from 'react';\nimport Section from 'components/Section/Section';\nimport ContactsForm from 'components/ContactsForm/ContactsForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport { Container } from './App.styled';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = newContact => {\n    this.state.contacts.some(({ name }) => name === newContact.name)\n      ? alert(`Contact ${newContact.name} already exists`)\n      : this.setState(({ contacts }) => ({\n          contacts: [newContact, ...contacts],\n        }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  getFilterValue = event => {\n    this.setState({\n      filter: event.target.value,\n    });\n  };\n\n  filteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizeFilter) ||\n        contact.number.includes(normalizeFilter),\n    );\n  };\n\n  render() {\n    const { addContact, deleteContact, getFilterValue, filteredContacts } =\n      this;\n    const filtered = filteredContacts();\n    return (\n      <Container>\n        <Section title=\"Phonebook\">\n          <ContactsForm onSubmit={addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter filter={this.state.filter} onChange={getFilterValue} />\n\n          <ContactsList contacts={filtered} onDeleteClick={deleteContact} />\n        </Section>\n      </Container>\n    );\n  }\n}\n\n//  {\n//    filtered.length === 0 ? (\n//      <p>couldn't find any matches</p>\n//    ) : (\n//      <ContactsList contacts={filtered} onDeleteClick={deleteContact} />\n//    );\n//  }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}